
incl_channels = 1:72;
func_handle = @nanmean;
cond1 = 'ball'
cond2 = 'cup'

mcpa_struct = MCP_to_MCPA(mcp_struct,[1:length(mcp_struct)],incl_channels,time_window);
mcpa_summ = summarize(mcpa_struct,func_handle);

    cond1_flag = strcmp(cond1,mcpa_summ.event_types);
    cond2_flag = strcmp(cond2,mcpa_summ.event_types);

for s_idx = 1:length(mcp_struct)
    
    group_subvec = 1:length(mcp_struct);
    group_subvec(s_idx) = [];
    
    group_cond1 = mean(mcpa_summ(cond1_flag,incl_channels,group_subvec),3);
    group_cond2 = mean(mcpa_summ(cond2_flag,incl_channels,group_subvec),3);
    
    subj_events = MCP_get_subject_events(mcp_struct(s_idx),incl_channels,time_window,{MCP_struct(s_idx).Experiment.Conditions.Name});
    subj_patterns1 = squeeze(func_handle(subject_events(:,:,:,cond1_flag),1));
    subj_patterns2 = squeeze(func_handle(subject_events(:,:,:,cond2_flag),1));
    